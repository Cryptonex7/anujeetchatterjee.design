{"version":3,"sources":["constants.js","reducers/reducers.js","components/Home/SideButton/SideButton.js","components/Home/NavBar/NavBarResp.js","Router.js","containers/App.js","actions/actions.js","registerServiceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","SET_PAGE_VALUE","ROOT","WEB","MUSIC","DESIGN","YT_DATA_API_KEY","initialState","page","window","location","pathname","SideButton","_ref","visibilityFunction","react_default","a","createElement","className","onClick","height","id","version","viewBox","width","xmlns","y","x","NavBar","classToggle","document","getElementById","classList","toggle","rotations","z","_this","navPage","this","props","Home_SideButton_SideButton","NavLink","exact","to","activeClassName","Component","Home","lazy","e","then","bind","WebDesign","Music","Design","Router","react","fallback","Switch","Route","path","component","App","fetch","response","json","console","log","onPageChange","BrowserRouter","NavBar_NavBarResp","src_Router","connect","state","dispatch","type","payload","setPage","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","logger","createLogger","store","createStore","arguments","length","undefined","action","Object","assign","applyMiddleware","ReactDOM","render","es","containers_App","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2197f60d.chunk.js","sourcesContent":["export const SET_PAGE_VALUE = 'SET_PAGE_VALUE';\r\nexport const ROOT = '/anujeetchatterjee.design/';\r\nexport const WEB = '/anujeetchatterjee.design/web';\r\nexport const MUSIC = '/anujeetchatterjee.design/music';\r\nexport const DESIGN = '/anujeetchatterjee.design/graphics';\r\nexport const YT_DATA_API_KEY = 'AIzaSyATYdoa41TMw0I_SgDkUHZPQol_z5Sz3_c';","import { SET_PAGE_VALUE} from \"../constants\";\r\n\r\nconst initialState = {\r\n    page : window.location.pathname\r\n}\r\n\r\nexport const changePage = (state= initialState, action={}) => {\r\n    switch(action.type){\r\n        case SET_PAGE_VALUE:\r\n            return Object.assign({}, state, {page: action.payload})\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport '../../../css/SideButton.css';\r\nimport '../../../css/SideButtonAnimation.css';\r\n\r\n\r\nconst SideButton = ({visibilityFunction}) => {\r\n    return(\r\n      <div className=\"SideButton\">\r\n        <div  onClick={visibilityFunction} className='toggle-btn side-toggle'>\r\n          <svg  className=\"nav-btn\" height=\"40px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"512px\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n            <g  className='white'>\r\n              <g className=\"bar-1  trans\" id =\"baricon-1\">\r\n                <rect  height=\"32\" width=\"320\" y=\"335\" x=\"105\"/>\r\n              </g>\r\n              <g className=\"bar-2 trans\"  id =\"baricon-2\">\r\n                <rect  height=\"32\" width=\"320\" y=\"235\" x=\"105\"/>\r\n              </g>\r\n              <g className=\"bar-3 trans\"  id =\"baricon-3\">\r\n                <rect  height=\"32\" width=\"320\" y=\"135\" x=\"105\"/>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>   \r\n    );\r\n}\r\n\r\nexport default SideButton; ","\r\nimport React, {Component} from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport SideButton from '../SideButton/SideButton';\r\n\r\nimport { ROOT, WEB, MUSIC, DESIGN } from \"../../../constants\";\r\n\r\nimport '../../../css/NavBarResp.css';\r\n\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n  classToggle = () => {\r\n    // const navs = document.querySelectorAll('.link-container')\r\n    // navs.forEach(nav => nav.classList.toggle('ToggleShow'));\r\n    document.getElementById('flex-container').classList.toggle('ToggleShow')\r\n  }\r\n\r\n\r\n  rotations =() => {\r\n    let x= document.getElementById(\"baricon-1\");\r\n    x.classList.toggle(\"rotate-1\");\r\n    x.classList.toggle(\"bar-1\");\r\n    \r\n    let y= document.getElementById(\"baricon-2\");\r\n    y.classList.toggle(\"rotate-2\");\r\n    y.classList.toggle(\"bar-2\");\r\n    \r\n    let z= document.getElementById(\"baricon-3\");\r\n    z.classList.toggle(\"rotate-3\");\r\n    z.classList.toggle(\"bar-3\");\r\n    this.classToggle();\r\n  }\r\n  \r\n  render(){\r\n    const { navPage }  = this.props;\r\n    return(\r\n        <div className=\"Navbar\">\r\n            <div className=\"Navbar__Link Navbar__Link-brand\">\r\n                <div className=\"page-title\">\r\n                    #<span className=\"gray-text\">the</span>Grand<span className=\"red-text\">Portfolio</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"Navbar__Link Navbar__Link-toggle\">\r\n                <SideButton visibilityFunction={this.rotations}/>\r\n            </div>\r\n            <nav className=\"Navbar__Items Navbar__Items--right\" id=\"flex-container\">\r\n                <div className=\"Navbar__Link\">\r\n                    <NavLink exact to='/anujeetchatterjee.design/'  className=\"linkStyles\"  id={ROOT}  activeClassName=\"nav-active\"      onClick={()=> navPage(ROOT)} >Home</NavLink>\r\n                </div>\r\n                <div className=\"Navbar__Link\">\r\n                    <NavLink to='/anujeetchatterjee.design/music'   className=\"linkStyles\"         id={MUSIC} activeClassName=\"nav-active\"      onClick={()=> navPage(MUSIC)} >Music</NavLink>\r\n                </div>\r\n                <div className=\"Navbar__Link\">\r\n                    <NavLink to='/anujeetchatterjee.design/graphics'className=\"linkStyles\"  id={DESIGN}activeClassName=\"nav-active\"      onClick={()=> navPage(WEB)} >Graphic Design</NavLink>\r\n                </div>\r\n                <div className=\"Navbar__Link\">\r\n                    <NavLink to='/anujeetchatterjee.design/web'     className=\"linkStyles\"  id={WEB}   activeClassName=\"nav-active\"      onClick={()=> navPage(WEB)} >Web Design</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar; ","import React, { Suspense, lazy } from 'react';\r\n\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nconst Home = lazy(() => import('./containers/Home/Home'));\r\nconst WebDesign = lazy(() => import('./containers/Web/WebDesign'));\r\nconst Music = lazy(() => import('./containers/Music/Music'));\r\nconst Design = lazy(() => import('./containers/Design/Design'));\r\n\r\nconst Router = () => (\r\n    <Suspense fallback = {<div>Loading...</div>}>\r\n        <Switch>\r\n            <Route\r\n                exact path=\"/anujeetchatterjee.design/\"\r\n                component={Home}\r\n            />\r\n            <Route\r\n                path=\"/anujeetchatterjee.design/web\"\r\n                component={WebDesign}\r\n            />\r\n            <Route\r\n                path=\"/anujeetchatterjee.design/music\"\r\n                component={Music}\r\n            />\r\n            <Route\r\n                path=\"/anujeetchatterjee.design/graphics\"\r\n                component={Design}\r\n            />\r\n        </Switch>\r\n    </Suspense>\r\n)\r\n\r\nexport default Router;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NavBarResp from '../components/Home/NavBar/NavBarResp'\r\nimport Router from '../Router'\r\nimport { setPage } from '../actions/actions';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nimport '../css/App.css';\r\nimport '../css/AboutBar.css';\r\nimport '../css/IntroBar.css';\r\nimport '../css/Subscribe.css';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    page: state.page\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPageChange: (page) => dispatch(setPage(page))\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  componentDidMount () {\r\n    fetch('https://ac-server.herokuapp.com/')\r\n      .then(response => response.json())\r\n      .then(console.log)\r\n    \r\n  }\r\n\r\n  render() {\r\n\t\tconst { onPageChange } = this.props;\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <NavBarResp navPage = {onPageChange}/>\r\n          <Router/>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { SET_PAGE_VALUE } from '../constants';\r\n\r\nexport const setPage = (page) => ({\r\n    type: SET_PAGE_VALUE,\r\n    payload: page\r\n})","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport { changePage } from './reducers/reducers';\r\nimport './css/index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst logger = createLogger();\r\nconst store = createStore(changePage, applyMiddleware(logger));\r\n\r\nReactDOM.render((\r\n    <Provider store = {store}> \r\n            <App/>\r\n    </Provider> \r\n), document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}